// <auto-generated />
using System;
using Bespeaking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bespeaking__Backup.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20231025105831_HotelAnnotationFix")]
    partial class HotelAnnotationFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bespeaking.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CompanyContactNumber")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rating")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Comapnies");
                });

            modelBuilder.Entity("Bespeaking.Models.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Anytime_Front_Desk_Service")
                        .HasColumnType("bit");

                    b.Property<bool?>("Business_Center_with_Printing_and_Fax_Services")
                        .HasColumnType("bit");

                    b.Property<bool?>("Clean_Towels")
                        .HasColumnType("bit");

                    b.Property<bool?>("Free_Breakfas")
                        .HasColumnType("bit");

                    b.Property<bool?>("Free_WiFi_Access")
                        .HasColumnType("bit");

                    b.Property<bool?>("Gym_and_Fitness_Center")
                        .HasColumnType("bit");

                    b.Property<bool?>("Hair_Dryer")
                        .HasColumnType("bit");

                    b.Property<bool?>("In_Room_Coffee_and_Tea_Makers")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ironing_Services")
                        .HasColumnType("bit");

                    b.Property<bool?>("Kettle")
                        .HasColumnType("bit");

                    b.Property<Guid>("LicenseKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Pillow_Options")
                        .HasColumnType("bit");

                    b.Property<bool?>("Refrigerator_Mini_Bar")
                        .HasColumnType("bit");

                    b.Property<bool?>("Safe_Box")
                        .HasColumnType("bit");

                    b.Property<bool?>("Slippers")
                        .HasColumnType("bit");

                    b.Property<bool?>("Soundproofing")
                        .HasColumnType("bit");

                    b.Property<bool?>("Spa_like_Experience")
                        .HasColumnType("bit");

                    b.Property<bool?>("Swimming_Pool")
                        .HasColumnType("bit");

                    b.Property<bool?>("Swimming_Pool_and_Hot_Tub")
                        .HasColumnType("bit");

                    b.Property<bool?>("Toiletries")
                        .HasColumnType("bit");

                    b.Property<bool?>("Treats_at_Turndown")
                        .HasColumnType("bit");

                    b.Property<string>("checkIn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("checkOut")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("image_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Bespeaking.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Bespeaking.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BlackListToken")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bespeaking.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Bespeaking.Models.Hotel", b =>
                {
                    b.HasOne("Bespeaking.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
